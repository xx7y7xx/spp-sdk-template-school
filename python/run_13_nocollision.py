### coding=utf-8###                              本模块用于检测碰撞### -------------------------------------------------------------------import os,sysfrom xml.dom.minidom import parsefrom xml.dom.minidom import parseStringimport xml.etree.ElementTree as etreeimport shutil### ---------------------------------------------------------### 自定义模块import commonimport configimport bucfg### --------------------------------------------------------------### 变量定义meshobjList = [ ]   ### 记录nocollision.txt中的模型名称tmpList = [ ]       ### 记录未找到的模型名称 依次删除可以找到的，剩下就是不存在的。### ---------------------------------------------------------------### 处理不需要计算阻挡的meshobjdef process():		print '-------------------------------'	print common.encodeChinese('>> 处理无碰撞模型(run_13_nocollision.py)')		### 判断 /src/product/position/nocollision.txt 是否存在	if os.path.isfile(bucfg.nocollisionFile):				fileHandle = open ( bucfg.nocollisionFile, 'r' )  		fileList = fileHandle.readlines()				### 遍历文件，逐行读取，取出模型名称		for fileLine in fileList :			meshobjList.append(fileLine.rstrip())			tmpList.append(fileLine.rstrip())		fileHandle.close()			#### 读取 world.xml 文件，修改对应的 meshobj		worldxml = "%sart\\world.xml"%(bucfg.targetDir)		meshgenxml = "%sart\\meshgen.xml"%(bucfg.targetDir)		checkXml(worldxml)		checkXml(meshgenxml)				if len(tmpList)> 0:			for meshName in tmpList:				print "[warning]: the mesh named "+meshName+"  is not be found in meshobj, please check your nocollision.txt file!"			print ''		### ----------------------------------------------------------------------------------#### 在指定的xml中寻找模型名称的meshobj，添加trimesh	def checkXml(xmlPath):	if os.path.isfile(xmlPath):		content = common.readFile(xmlPath)				for meshName in meshobjList:			oldStr = '<meshobj name="'+meshName+'">'			newStr = '\t\t<trimesh><id>colldet</id></trimesh>\n\t'			pos1 = content.find(oldStr) ### 寻找mesh名字的节点						if pos1 < 0:				continue										pos2 = content.find("</meshobj>",pos1)  ### 寻找mesh里面的结束符						if content.find(newStr, pos1, pos2) < 0:    ### 如果该模型还没有添加 <trimesh> 节点				content = content[:pos2] +newStr+ content[pos2:]							tmpList.remove(meshName)				### 将新的 world 文件重新写入		f =  open(xmlPath,'w')		f.write(content)		f.close()