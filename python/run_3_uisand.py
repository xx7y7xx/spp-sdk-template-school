# coding=utf-8import os,sysfrom xml.dom import *import configimport commonimport bucfgimport run_100_log#################################prdSandTable= "%ssandTable\\"%(bucfg.productDir)def process():				print '-------------------------------'	print common.encodeChinese('>> 整理沙盘中的UI信息')	print ''		#检查沙盘文件 先检查目录文件若不存在直接从模板中copy		if not os.path.exists (prdSandTable):		run_17_log.message += common.encodeChinese("\n【沙盘】................")		checkbuild.checkReqFile(prdSandTable)				#在检查txt和xml是否一致 若不一致创建为一致的txt		# if checkSandInfo():			# run_17_log.message += common.encodeChinese("\n【沙盘】................")						domString   = "<SAND_TABLE>"	domString += getCategorys()	domString += "\n</SAND_TABLE>"	domString=domString.replace("&","a_a")	common.writeNewFile(bucfg.targetDir+"json/ui_sand.xml", domString)	print ''# 遍历出所有的 category ; 即，遍历 /src/prodcut/sandTable 下所有的目录# 生成沙盘信息分类def getCategorys():	domString = ""	dirs = os.listdir(bucfg.prdSandTable)	for dir in dirs:		if dir.find(".svn")>-1:			continue		tmplist = dir.split("@")		dirPath = bucfg.prdSandTable+dir		domString += getOneSeed(dirPath)		return domString# 遍历 /src/product/ui/sandTable/1@...@.../ 目录中的所有文件# 生成某个分类下的具体信息searchdata_num = -1def getOneSeed( dirPath ):	global searchdata_num,urlFile	domString = ""	dirs = os.listdir(dirPath)	tmpstr = ""	urlFile=""	for dir in dirs:		file=os.path.join(dirPath,dir)		if dir[-4:]==".txt":			fname = dir.split(".")[0]			if tmpstr.find(","+fname)==-1:			#检查是否存在子网站即**.url.txt存在 如果存在返回一个bool值				upath=file.split("cn.txt")[0]				upath+="url.txt"             #拼接目标url的路径				flag= os.path.isfile(upath)#返回boolean值				searchdata_num += 1				numstr = str(searchdata_num)				domString += "\n\t<n__n"+numstr+">"				domString += getSeedCnEn(dirPath+"\\"+fname)				domString += "\n\t\t<url>"+getUrl(flag,upath)				domString+="\n\t\t</url>"				domString += getSeedPosRotUipos(fname)				domString += "\n\t</n__n"+numstr+">"				tmpstr += ","+fname				return domString# 根据 /src/product/ui/sandTable/1@...@.../中文名.cn.txt 中的“中文名”分别# 读取中文介绍、英文介绍def getSeedCnEn(file):	enFile = file+".en.txt"	cnFile = file+".cn.txt"	domString   = ""	if os.path.isfile(enFile) and os.path.isfile(enFile):		domString += "\n\t\t<name>"		domString += "\n\t\t\t<chinese>"+common.readFileFirstLine(cnFile)+"</chinese>"		domString += "\n\t\t\t<english>"+common.readFileFirstLine(enFile)+"</english>"		domString += "\n\t\t</name>"		domString += "\n\t\t<chinese>"		domString += common.readFileExceptFirst(cnFile)		domString += "\n\t\t</chinese>"		domString += "\n\t\t<english>"		domString += common.readFileExceptFirst(enFile)		domString += "\n\t\t</english>"	else:		print file+".en.txt/.cn.txt  is not found !"		os._exit(0)		return domString 	# 根据沙盘分类下某个具体信息的中文名去 /src/art/position/sand.xml 文件中查找位置信息def getSeedPosRotUipos(fname):	content = common.readFile(bucfg.posSandXml)	fname = fname.decode('gbk').encode("utf8")	fname='"'+fname+'"'       #名字包含的情况会导致只拿出长名字的情况，如  友园餐厅和友园	start = content.find(fname)	content = content[start+len(fname)+2:]	end  = "</label>"	domString = content[0:content.find(end)]		#	TODO：	# 这里使用  "\n\t\t\t" 来  split 很不稳妥，还是需要找另一个解决方案	# 修改后的方案使用 "</" 来split 	list = domString.split("</")	position = list[1][list[1].find("[")+1:list[1].find("]")].split(",")	rotation = list[2][list[2].find("[")+1:list[2].find("]")].split(",")	domString   = ""	domString += "\n\t\t<position_x>"+position[0]+"</position_x>"	domString += "\n\t\t<position_y>"+position[1]+"</position_y>"	domString += "\n\t\t<position_z>"+position[2]+"</position_z>"	domString += "\n\t\t<rotation_y>"+rotation[1]+"</rotation_y>"		return domString	#根据返回的boolean值修改需要添加的url标签的内容def getUrl(flag,file):	if flag:			urlFile=common.readFile(file)	else:		urlFile=(bucfg.url)[0]	return urlFile			# 检查沙盘信息/src/product/position/sand.xml 与 /src/product/sandTable/ 下的信息匹配def checkSandInfo():	# print"222222222222222"	flag = True	print ''	print '-------------------------------'	print  common.encodeChinese("检查沙盘信息是否匹配....")	print ''		# 把 sand.xml中所有中文名称取出来	sandDom = minidom.parse(bucfg.posSandXml)	labelList = sandDom.getElementsByTagName("label")		# 把 sandTable 目录下所有的中文名称取出来	cnameList = []	dirList = os.listdir(bucfg.prdSandTable)	for dir in dirList:		dir = dir.decode("gbk")		fileList = os.listdir(bucfg.prdSandTable+dir)		for file in fileList:			cnameList.append(file)	# 把 list[] 转换为字符串来处理	cnameString = "@".join(cnameList)					# 判断信息是否匹配	for label in labelList:		cname = label.getAttribute("id")		cn = cname+".cn.txt"		en = cname+".en.txt"		type = ""		if cnameString.find(cn) < 0:			flag = False			type = "中文介绍"					if cnameString.find(en) < 0:			flag = False			type = "英文介绍"				if flag==False:			print ''			print common.encodeChinese(config.ERR703)			print ''			print '具体错误如下：'.decode('utf8')			print ">> 找不到[ ".decode('utf8') +cname+ " ]的".decode('utf8')+ type.decode('utf8')			print ">> 缺少的文件是：".decode('utf8') + bucfg.prdSandTable.decode('utf8') + cname +".cn.txt"			print common.encodeChinese("你必须确保src/product/position/sand.xml文件中所描述的中文名称与/src/product/sandTable/*@*@*/中所包含的文件名称一一对应。")			common.pause()			os._exit(0)			return flag