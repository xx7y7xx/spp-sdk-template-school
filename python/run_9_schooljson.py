# coding=utf-8#--------------------------------------------------------------------------------------------import os,sys,codecsimport shutilfrom xml.dom import *from  xml.dom import minidomfrom xml.dom.minidom import parseimport commonimport configimport bucfgbuildImg=[]# 处理进度条背景图片、快速定位背景图、校园logo图片、地理信息图片def process():		# 该字符串保存的是最终的 xml 	domString = "<JSON_SCHOOL type=\"school\">"		# 添加窗体的标题内容	print '-------------------------------'	print common.encodeChinese('>> 添加窗口标题')	print ''	domString += createWindowSetting()	print ''		# 添加角色、摄像机的初始位置、朝向及人物选择时的位置、朝向	print '-------------------------------'	print common.encodeChinese('>> 设置角色出生位置')	print ''	domString += procRoleXml()	print ''		# 添加 UI 标签	domString += "\n\t<ui>"		# 添加 UI 的校园介绍	print '-------------------------------'	print common.encodeChinese('>> 添加 UI 的校园介绍')	print ''	domString += createSchoolIntroduce()	print ''		# 添加沙盘分类信息	print '-------------------------------'	print common.encodeChinese('>> 添加沙盘分类信息')	print ''	domString  += createSandcategory()	print ''		# 添加建筑信息	print '-------------------------------'	print common.encodeChinese('>> 添加建筑信息')	print ''	domString  += createBuildData()	print ''		# 添加帮助信息	print '-------------------------------'	print common.encodeChinese('>> 添加系统帮助信息')	print ''	domString  += createSchoolHelp()	print ''		# 添加小地图的信息	print '-------------------------------'	print common.encodeChinese('>> 添加小地图的信息')	print ''	domString  += procMinimap()	print ''		domString += "\n\t</ui>"	domString += "\n</JSON_SCHOOL>"	domString=domString.replace("&","a_a")	common.writeNewFile(bucfg.targetDir+"json/json.xml", domString)	##############################################################################################################################################################################################			##############################################################################################################################################################################################		# 创建 WindowSetting 节点的函数def createWindowSetting():	text = common.readFile(bucfg.prdInit)	domString   = "\n\t<WindowSetting>"	domString += "\n\t\t<title>"+text+"</title>"	domString += "\n\t</WindowSetting>"	return domString	##############################################################################################################################################################################################			##############################################################################################################################################################################################		# 读取 /src/art/position/role.xml# 获得 roleSelect 和 roleInitialize 两个节点，并以字符串形式返回def procRoleXml():	domString = ""	domString = common.readFile(bucfg.posRoleXml)	domString = domString.replace("<application type=\"school\">", "")	domString = domString.replace("</application>", "")		return domString	##############################################################################################################################################################################################			##############################################################################################################################################################################################		#	创建校园介绍的内容#def createSchoolIntroduce():	domString   = "\n\t\t<schoolIntroduce>"		domString += "\n\t\t\t<buttonText>"	domString += getTitleText()	domString += "\n\t\t\t\t<contentText>"	domString += getContentText()	domString += "\n\t\t\t\t</contentText>"	domString += "\n\t\t\t</buttonText>"		domString += "\n\t\t\t<img>"	domString += getContentImg()	domString += "\n\t\t\t</img>"		domString += "\n\t\t\t<introduceText>"	domString += getContentIntroduce()	domString += "\n\t\t\t</introduceText>"		domString += "\n\t\t</schoolIntroduce>"	return domString	# 校园介绍的标题def getTitleText():	domString   = "\n\t\t\t\t<chinese>"+common.readFileFirstLine(bucfg.prdSchoolCn)+"</chinese>"	domString += "\n\t\t\t\t<english>TempleIntroduce</english>"	return domString		# 校园介绍中的菜单def getContentText():	domString = ""		paths=os.listdir(bucfg.prdSIContentText)	for filepath in paths:		if filepath.find(".svn")>-1:			continue					file = bucfg.prdSIContentText + filepath		content = common.readFile(file)		conList = content.split("\n")		text = filepath[0:9]		domString += "\n\t\t\t\t\t<"+text+">"		domString += "\n\t\t\t\t\t\t<chinese>"+conList[0]+"</chinese>"		domString += "\n\t\t\t\t\t\t<english>"+conList[1]+"</english>"		domString += "\n\t\t\t\t\t</"+text+">"		return domString	# 校园介绍的图片集	def getContentImg():	domString = ""		domString += getOneContentImg("activity", bucfg.prdSIImgActivity)	domString += getOneContentImg("docenten", bucfg.prdSIImgDocenten)	domString += getOneContentImg("scenery", bucfg.prdSIImgScenery)		return domString	# 校园介绍图片单个目录的数据搜集def getOneContentImg(tagName, path):	domString = ""		paths=os.listdir(path)	domString += "\n\t\t\t\t<"+tagName+">"	if len(paths) >0:		for file in paths:			ext = common.getFilenameExt(file)			if ext == '.jpg' or ext == '.JPG':				# 将图片拷贝到指定目录下				srcFile = path + file				if (file.split(".")[0]).find(" ")>-1:					file=file.replace(" ","")				tarFile = "%sui\\data\\image\\%s\\%s"%(bucfg.targetDir, tagName, file)				shutil.copyfile(srcFile, tarFile)				# 拼成xml2json所需格式				file = "n__n"+file				domString += "\n\t\t\t\t\t<"+file+">n__n</"+file+">"					else:		domString += "n__n"	domString += "\n\t\t\t\t</"+tagName+">"		return domString	# 获得中英文的详细介绍def getContentIntroduce():	domString   = "\n\t\t\t\t<chinese>"	domString  += common.readFileExceptFirst(bucfg.prdSchoolCn)	domString += "\n\t\t\t\t</chinese>"	domString += "\n\t\t\t\t<english>"	domString  += common.readFileExceptFirst(bucfg.prdSchoolEn)	domString += "\n\t\t\t\t</english>"		return domString	# '''# <schoolIntroduce>		# <buttonText>			# <chinese>寺庙介绍</chinese>			# <english>TempleIntroduce</english>			# <contentText>				# <infoText1>					# <chinese>寺庙简介</chinese>					# <english>Introduction</english>				# </infoText1>				# <infoText2>					# <chinese>寺庙图片集</chinese>					# <english>images</english>				# </infoText2>				# <infoText3>					# <chinese>寺庙视频集</chinese>					# <english>videos</english>				# </infoText3>				# <infoText4>					# <chinese>寺庙风光</chinese>					# <english>Scene</english>				# </infoText4>				# <infoText5>					# <chinese>寺庙活动</chinese>					# <english>Activity</english>				# </infoText5>				# <infoText6>					# <chinese>寺庙剪影</chinese>					# <english>Sketch</english>				# </infoText6>			# </contentText>		# </buttonText>		# <img>			# <activity>				# <1_activity.jpg></1_activity.jpg>				# <2_activity.jpg></2_activity.jpg>			# </activity>			# <docenten>				# <1_docenten.jpg></1_docenten.jpg>				# <2_docenten.jpg></2_docenten.jpg>			# </docenten>			# <scenery>				# <1_scenery.jpg></1_scenery.jpg>				# <2_scenery.jpg></2_scenery.jpg>			# </scenery>		# </img>		# <introduceText>			# <chinese>					# 最初的雍和宫建筑群并不是宗教场所,原是清王朝入关后的第三代皇帝雍正，即爱新					# 觉罗·胤禛位居贝勒王时的府邸，时称“四贝勒府”。康熙四十八年（公元1709年）					# 贝勒王胤禛被加封为和硕雍亲王,此府始称雍亲王府。</chinese>			# <english>				# Initial Lama Temple buildings are not places of worship, originally Emperor Yongzheng of the				# Qing Dynasty after the entry of the third generation, that is, love the new  n 												# Jue Luo Yin zhen ranked Baylor King mansion, said Baylor House. Forty-eight years of Emperor Kangxi (AD 1709)  n 												# Baylor Wang Yin zhen was sealed and the Master Yong Prince, the government said before the Yung Prince House.			# </english>		# </introduceText>	# </schoolIntroduce># '''##############################################################################################################################################################################################			##############################################################################################################################################################################################		stringSandxml = ""# 读取 /src/art/position/role.xml# 获得 roleSelect 和 roleInitialize 两个节点，并以字符串形式返回def createSandcategory():	global stringSandxml		f = codecs.open(bucfg.posSandXml, "r", "utf8")	stringSandxml = f.read() 	f.close()		domString   = "\n\t\t<categorys>"	domString += getCategorys()	domString += "\n\t\t</categorys>"		stringSandxml = None 		return domString# 遍历出所有的 category ; 即，遍历 /src/prodcut/sandTable 下所有的目录# 生成沙盘信息分类def getCategorys():	domString = ""		# 处理排序	cateList = [] # 存放 sandTable目录下的所有子文件的全路径	dirs = os.listdir(bucfg.prdSandTable)	for dir in dirs:		if dir.find(".svn")>-1:			continue					tmp = dir.split("@")		id = int(tmp[0])		cateList.append((id, dir))			# 排序	cateList.sort(key=lambda x:int(x[0]))	for dir in cateList:		if dir[1].find(".svn")>-1:			continue					tmplist = dir[1].split("@")		dirPath = bucfg.prdSandTable+dir[1]		# 判断某个具体分类的目录中是否为空，如果是空的则不创建这个分类		if len( os.listdir(dirPath) ) > 0:						domString += "\n\t\t<category>"			domString += "\n\t\t\t<chinese>"+tmplist[1]+"</chinese>"			domString += "\n\t\t\t<english>"+tmplist[2]+"</english>"			domString += getOneSeed(dirPath)			domString += getEmptySeed()		# 这个方法避免category中只有一个seed的时候，json文件中不是数组的bug			domString += "\n\t\t</category>"			return domString# 遍历 /src/product/ui/sandTable/1@...@.../ 目录中的所有文件# 生成某个分类下的具体信息def getOneSeed( dirPath ):	global stringSandxml	domString = ""	dirs = os.listdir(dirPath)	tmpstr = ""	for dir in dirs:		if dir[-4:]==".txt":			fname = dir.split(".")[0]			if tmpstr.find(","+fname)==-1:		# 因为文件有  fname.cn.txt 和 fname.en.txt ，所以只加一次				# 判断 fname(名称）在 /src/product/position/sand.xml 中是否存在				# 如果存在则添加，不存在则跳过				if stringSandxml.find(fname.decode("gbk")) > -1:					domString += "\n\t\t\t<seed>"					domString += getSeedCnEn(dirPath+"\\"+fname)					domString += getSeedPosRotUipos(fname)					domString += "\n\t\t\t</seed>"					tmpstr += ","+fname	return domString# 根据 /src/product/ui/sandTable/1@...@.../中文名.cn.txt 中的“中文名”分别# 读取中文介绍、英文介绍def getSeedCnEn(file):	enFile = file+".en.txt"	cnFile = file+".cn.txt"	domString   = ""	domString += "\n\t\t\t\t<chinese>"	domString += "\n\t\t\t\t\t<name>"+common.readFileFirstLine(cnFile)+"</name>"	domString += "\n\t\t\t\t\t<intro>"	domString += common.readFileExceptFirst(cnFile)	domString += "\n\t\t\t\t\t</intro>"	domString += "\n\t\t\t\t</chinese>"	domString += "\n\t\t\t\t<english>"	domString += "\n\t\t\t\t\t<name>"+common.readFileFirstLine(enFile)+"</name>"	domString += "\n\t\t\t\t\t<intro>"	domString += common.readFileExceptFirst(enFile)	domString += "\n\t\t\t\t\t</intro>"	domString += "\n\t\t\t\t</english>"		return domString 	# 根据沙盘分类下某个具体信息的中文名去 /src/art/position/sand.xml 文件中查找位置信息def getSeedPosRotUipos(fname):	domString = ""		# content = common.readFile(bucfg.posSandXml)	# fname = fname.decode('gbk').encode("utf8")		# start = content.find(fname)	# content = content[start+len(fname)+2:]	# end  = "</label>"	# domString = content[0:content.find(end)]		sandDoc = parse( bucfg.posSandXml )	labels = sandDoc.getElementsByTagName("label")	for lab in labels:		if fname.decode('gbk')==lab.getAttribute("id"):			domString = xmlToString(lab)			return domStringdef xmlToString(node):	res = ""	for sub in node.childNodes:		if sub.nodeType==3:			res += sub.data		if sub.nodeType==1:			res += '\t\t<'+sub.nodeName+'>'+sub.firstChild.nodeValue+'</'+sub.nodeName+'>'			return res.decode("gbk").encode("utf-8")		def getEmptySeed():	domString = ""		domString += "\n\t\t\t<seed>"	domString += "\n\t\t\t\t<chinese>"	domString +="\n\t\t\t\t\t<name>n__n</name>"	domString +="\n\t\t\t\t\t<intro>n__n</intro>"	domString +="\n\t\t\t\t</chinese>"	domString +="\n\t\t\t\t<english>"	domString +="\n\t\t\t\t\t<name>n__n</name>"	domString +="\n\t\t\t\t\t<intro>n__n</intro>"	domString +="\n\t\t\t\t</english>"	domString += "\n\t\t\t</seed>"		return domString			##############################################################################################################################################################################################			##############################################################################################################################################################################################		def createBuildData():	domString = "\n\t\t<BULID_DATA>"		# 先读取 src/art/position/build.xml ，遍历所有的 meshobj	try:		buildDom = minidom.parse(bucfg.posBuildXml)		except:		common.ansixml2utf8xml(bucfg.posBuildXml)		buildDom = minidom.parse(bucfg.posBuildXml)						meshList = buildDom.getElementsByTagName("meshobj")		# 美术提供的所有meshobj的名字及对应的产品文件的中文名	num = 30 # 建筑标签的节点名		#删除模板中自带图片 	for img in os.listdir(bucfg.prdSIImg):		imgPath=os.path.join(bucfg.prdSIImg,img)				if os.path.isfile(imgPath):			os.remove(imgPath)							for meshobj in meshList:		num +=1		strNum = str(num)				# 根据 meshobj 的中文名去找对应的建筑介绍及图片		meshName = meshobj.getAttribute("name")		# 获取meshobj的名字		meshCname = meshobj.getAttribute("cname")		# 获取对应的中文名称		# 根据中文名去 src/product/buildInfo/ 下对应的文件		cnFileName = "%s%s.cn.txt"%(bucfg.prdBuildInfo, meshCname)		enFileName = "%s%s.en.txt"%(bucfg.prdBuildInfo, meshCname)		imgExtName = ".jpg"		imgFileName = "%s%s%s"%(bucfg.prdBuildInfo, meshCname, imgExtName)		if not os.path.isfile(imgFileName):			imgExtName = ".png"			imgFileName = "%s%s%s"%(bucfg.prdBuildInfo, meshCname, ".png")			imgNewName = meshName+imgExtName		domString += "\n\t\t\t<i"+strNum+">"		domString += "\n\t\t\t\t<meshobj>"+common.encodeChinese(meshName)+"</meshobj>" #.replace("#","_")		domString += "\n\t\t\t\t<image>/ui/data/image/"+common.encodeChinese(imgNewName)+"</image>"		domString += "\n\t\t\t\t<chinese>"		domString += "\n\t\t\t\t\t<name>"+common.readFileFirstLine(cnFileName)+"</name>"		domString += "\n\t\t\t\t\t<intro>"+common.readFileExceptFirst(cnFileName)+"</intro>"		domString += "\n\t\t\t\t</chinese>"		domString += "\n\t\t\t\t<english>"		domString += "\n\t\t\t\t\t<name>"+common.readFileFirstLine(enFileName)+"</name>"		domString += "\n\t\t\t\t\t<intro>"+common.readFileExceptFirst(enFileName)+"</intro>"		domString += "\n\t\t\t\t</english>"		domString += "\n\t\t\t</i"+strNum+">"		#拷贝图片		shutil.copyfile(imgFileName, bucfg.targetDir+"ui\\data\\image\\"+imgNewName)			domString += "\n\t\t</BULID_DATA>"				print ""	print common.encodeChinese("检查UI使用的图片...............")	os.system('scaleTexture --src '+bucfg.prdSIImg+' --dst  '+bucfg.prdSIImg)	print common.encodeChinese("检查/修复完毕...............")	return domString	##############################################################################################################################################################################################			##############################################################################################################################################################################################			def createSchoolHelp():	domString   = "\n\t\t<schoolHelp>"	domString += "\n\t\t\t<features>"	domString += "\n\t\t\t\t<chinese>"	domString += common.readFileLines(bucfg.prdHelpCnTxt)	domString += "\n\t\t\t\t</chinese>"	domString += "\n\t\t\t\t<english>"	domString += common.readFileLines(bucfg.prdHelpEnTxt)	domString += "\n\t\t\t\t</english>"	domString += "\n\t\t\t</features>"	domString += "\n\t\t</schoolHelp>"		return domString			##############################################################################################################################################################################################			##############################################################################################################################################################################################		# 读取 /src/art/position/role.xml# 获得 roleSelect 和 roleInitialize 两个节点，并以字符串形式返回def procMinimap():	newPath="%s\\target\\ui\\data\\%s"%(config.PROJECT_HOME, bucfg.posMinimapName)	newXmlPath = "%s\\target\\json\\map.xml"%(config.PROJECT_HOME)	try:		# os.system("xcopy /E /y /q "+bucfg.posMinimap+" "+newPath)		shutil.copyfile(bucfg.posMinimap,  newPath)		shutil.copyfile(bucfg.posMapXml,  newXmlPath)	except:		print common.encodeChinese(config.ERR704)		os._exit(0)	domString = ""		return domString